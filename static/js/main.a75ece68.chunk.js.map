{"version":3,"sources":["components/Map.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["PORTLAND_LAT_LON","Map","children","props","MapContainer","preferCanvas","center","zoom","TileLayer","url","attribution","TEST_POLYLINE","MAP_FILL_SCREEN_STYLE","width","height","App","className","style","Polyline","positions","Tooltip","direction","offset","permanent","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gQASMA,EAAmB,CAAC,SAAU,SAmBrBC,MAff,YAAgD,IAAjCC,EAAgC,EAAhCA,SAAaC,EAAmB,iBAC7C,OACE,eAACC,EAAA,EAAD,yBACEC,cAAY,EACZC,OAAQN,EACRO,KAAM,IACFJ,GAJN,cAMGD,EAED,cAACM,EAAA,EAAD,CAAWC,IAjBf,0EAiByBC,YAfzB,mF,wBCFIC,EAAgB,CACpB,CAAC,MAAO,OACR,CAAC,OAAQ,QACT,CAAC,OAAQ,SAGLC,EAAwB,CAAEC,MAAO,QAASC,OAAQ,SAgBzCC,MAdf,WACE,OACE,qBAAKC,UAAU,MAAf,SACE,cAAC,EAAD,CAAKC,MAAOL,EAAZ,SACE,cAACM,EAAA,EAAD,CAAUC,UAAWR,EAArB,SACE,cAACS,EAAA,EAAD,CAASC,UAAU,SAASC,OAAQ,CAAC,EAAG,IAAKC,WAAS,EAAtD,iCCLKC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.a75ece68.chunk.js","sourcesContent":["import React from \"react\";\nimport { MapContainer, MapContainerProps, TileLayer } from \"react-leaflet\";\nimport \"leaflet/dist/leaflet.css\";\nimport { LatLngExpression } from \"leaflet\";\n\nconst URL =\n  \"https://{s}.basemaps.cartocdn.com/rastertiles/light_all/{z}/{x}/{y}.png\";\nconst ATTRIBUTION =\n  '&copy; <a href=\"https://openstreetmap.org\">OpenStreetMap</a>Contributors\"';\nconst PORTLAND_LAT_LON = [45.5051, -122.675] as LatLngExpression;\n\ntype MapProps = {} & MapContainerProps;\n\nfunction Map({ children, ...props }: MapProps) {\n  return (\n    <MapContainer\n      preferCanvas // necessary for jest testing, SVG not well supported\n      center={PORTLAND_LAT_LON}\n      zoom={13}\n      {...props}\n    >\n      {children}\n      {/* Map Tiles */}\n      <TileLayer url={URL} attribution={ATTRIBUTION} />\n    </MapContainer>\n  );\n}\n\nexport default Map;\n","import React from \"react\";\nimport Map from \"./components/Map\";\nimport \"./App.css\";\nimport { Polyline, Tooltip } from \"react-leaflet\";\nimport { LatLngExpression } from \"leaflet\";\n\nconst TEST_POLYLINE = [\n  [45.5, -122.7],\n  [45.52, -122.72],\n  [45.49, -122.68],\n] as LatLngExpression[];\n\nconst MAP_FILL_SCREEN_STYLE = { width: \"100vw\", height: \"100vh\" };\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Map style={MAP_FILL_SCREEN_STYLE}>\n        <Polyline positions={TEST_POLYLINE}>\n          <Tooltip direction=\"bottom\" offset={[0, 20]} permanent>\n            Test tooltip\n          </Tooltip>\n        </Polyline>\n      </Map>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}